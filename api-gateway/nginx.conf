worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Upstream services
    upstream user_service {
        server user-service:3000;
    }
    upstream comms_service {
        server comms-service:8080;
    }
    upstream ai_service {
        server ai-service:8082;
    }
    upstream conversation_service {
        server conversation-service:8083;
    }
    # React Dev Server running on the HOST machine
    upstream client_dev_server {
        server host.docker.internal:3000;
    }

    server {
        listen 80;

        # API routing
        location /api/users/ {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ai/ {
            proxy_pass http://ai_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket routing for the app's comms service, as per GEMINI.md specification
        location /api/ws/ {
            proxy_pass http://comms_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # All other traffic (UI and HMR WebSocket) goes to the client dev server
        location / {
            proxy_pass http://client_dev_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Tell the dev server not to gzip content, so we can modify it.
            proxy_set_header Accept-Encoding "";

            # Definitive fix for react-scripts HMR mixed content bug
            sub_filter_types text/html application/javascript;
            sub_filter 'protocol=ws%3A' 'protocol=wss%3A';

            # Dynamically set the HMR port based on the host.
            # The react-scripts dev server client incorrectly tries to connect to port 3000.
            # We intercept the JS file and replace 'port=3000' with the correct port the browser is using.
            set $hmr_port 28443; # Default for external access (ser74785.ddns.net:28443)
            if ($host ~* "^(localhost|127\.0\.0\.1)") {
                set $hmr_port 8443; # Port for local access (localhost:8443)
            }
            sub_filter 'port=3000' "port=$hmr_port";
            sub_filter_once off;
        }
    }
}